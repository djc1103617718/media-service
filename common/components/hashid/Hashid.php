<?php

namespace common\components\hashid;

use yii\base\Object;
use yii\helpers\ArrayHelper;
use Hashids\Hashids;

/**
 * Class Hashid
 * @package common\components\hashid
 */
class Hashid extends Object
{
    /**
     * @var Hashids $hashids Hashids的一个对象
     */
    protected $hashids;
    /**
     * @var array $hashOptions 给对象Hashids需要配置的属性
     */
    public $hashOptions = [];


    /**
     * 配置的初始化
     */
    public function init()
    {
        $this->hashOptions = ArrayHelper::merge([
            'salt' => 'salt'
        ], $this->hashOptions
        );
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * 获取对象Hashids
     *
     * @return Hashids
     */
    public function getHashids()
    {
        if (!is_object($this->hashids)) {
            $this->hashids = new Hashids($this->hashOptions['salt']);
        }
        return $this->hashids;
    }

    /**
     * 获得Hashids的转码函数,将整型转化成字符型
     *
     * @param integer $params 要转码的参数
     * @return string 转码之后的字符串
     */
    public function encode($params)
    {
        $hashids = $this->getHashids();
        return $hashids->encode($params);
    }

    /**
     *获得Hashids的转码函数,将字符型转化成整型
     *
     * @param string $params 要转码的参数
     * @return integer 转码之后的整型
     */
    public function decode($params)
    {
        $hashids = $this->getHashids();
        return $hashids->decode($params);
    }
}
