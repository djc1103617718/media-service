<?php

namespace upload\components\base;

use common\models\Category;
use yii;
use common\models\App;
use yii\base\UserException;
use yii\base\Exception;
use upload\components\ip\Ip;

/**
 * Class Controller
 * @package upload\components\base
 */
class Controller extends yii\web\Controller
{
    /**
     * @var App $app
     */
    public $app;
    /**
     * @var Category $category
     */
    public $category;

    /**
     * @param yii\base\Action $action
     * @return bool
     * @throws Exception
     * @throws yii\web\BadRequestHttpException
     */
    public function beforeAction($action)
    {
        $app_key = Yii::$app->request->get('app_key');
        //var_dump($app_key);die;
        $this->app = App::findOne(['key' => $app_key]);
        $category_url_name = Yii::$app->request->get('category_url_name');
        $this->category = Category::findOne(['url_name' => $category_url_name]);
        try {
            if (!$this->validateIps()) {
                throw new UserException('用户IP验证失败');
            }
            if (!$this->validateUser()) {
                throw new UserException('用户验证失败');
            }
        } catch (Exception $e) {
            throw $e;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * 数据库中获得IP范围
     *
     * @return array|bool
     */
    public function getIpRang()
    {
        if (empty($this->app)) {
            return false;
        }
        $ips = $this->app->allowed_ips;
        $array = explode(',', $ips);
        return $array;
    }

    /**
     * 验证IP有效性
     *
     * @return bool
     */
    public function validateIps()
    {
        $ip = Ip::getIp();
        $ipRang = $this->getIpRang();
        //var_dump($ipRang);die;
        foreach ($ipRang as $v) {
            if (Ip::ip_in_range($ip, $v)) {
                return true;
            } else {
                continue;
            }
        }
    }

    /**
     * 验证用户的签名和时效性
     *
     * @return bool
     */
    public function validateUser()
    {
        $params =  Yii::$app->request->get();
        $signature = $params['signature'];
        $timestamp = $params['timestamp'];
        unset($params['signature']);
        unset($params['category_url_name']);
        // 生成签名
        $secret = $this->app->secret;
        ksort($params);
        $result = http_build_query($params);
        $md5 = md5($result.$secret);
        // 比对签名
        if ($md5 !== $signature) {
            return false;
        }

        if (time() >= $timestamp + TIME_OUT) {
            return false;
        }
        return true;
    }
}
